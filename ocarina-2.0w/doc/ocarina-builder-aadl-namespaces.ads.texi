@subsubsection Ocarina.Builder.AADL.Namespaces 


This package defines the following subprograms:

@strong{Add_Declaration}: Insert any component, property_set, package or port_group into
the AADL specification. Namespace must reference the node
created with Initialize_Unnamed_Namespace or a package
specification. Return True if the element was correctly
inserted, else False

@example
@b{function }Add_Declaration
     (Namespace : Types.Node_Id;
      Element : Types.Node_Id)
     @b{return }Boolean;
@end example


@strong{Initialize_Unnamed_Namespace}: Create the AADL specification node, which corresponds to the
top level of the AADL description. This function must be
invoked first, as all the other elements of the description
will be added to this one. Loc is the location of the AADL
specification in the parsed text. Return a reference to the
newly created node if everything went right, else False.

@example
@b{function }Initialize_Unnamed_Namespace
     (Loc : Locations.Location)
     @b{return }Types.Node_Id;
@end example


@strong{Add_New_Package}: Checks if a package of that name already exists. If so, return
this one, else create a new one and return it. Loc is the
location of the package specification in the parsed
text. Pack_Name is a Node_Id referencing an identifier which
contains the name of the package. Namespace must reference the
top level AADL specification node.

@example
@b{function }Add_New_Package
     (Loc : Locations.Location;
      Pack_Name : Types.Node_Id;
      Namespace : Types.Node_Id)
     @b{return }Types.Node_Id;
@end example


@strong{Add_New_Package_Name}: Add a property association to the list of the package
properties, without checking for homonyms or whatever. This
function should be only used by other functions of the core
API. Namespace must reference a package specification. Return
True if the property was added, else False.

@example
@b{function }Add_New_Package_Name
     (Loc            : Locations.Location;
      Identifiers    : Types.List_Id)
     @b{return }Types.Node_Id;
@end example


@strong{Add_Property_Association}: Add a property association to the list of the package
properties, without checking for homonyms or whatever. This
function should be only used by other functions of the core
API. Namespace must reference a package specification. Return
True if the property was added, else False.

@example
@b{function }Add_Property_Association
     (Pack : Types.Node_Id;
      Property_Association : Types.Node_Id)
     @b{return }Boolean;
@end example


@strong{Add_New_Name_Visibility_Declaration}: Create the name visibility declaration node to the list of
the package declarations, without checking.

@example
@b{function }Add_New_Name_Visibility_Declaration
     (Loc         : Locations.Location;
      Namespace   : Types.Node_Id;
      List_Items  : Types.List_Id;
      Is_Private  : Boolean := False)
     @b{return }Types.Node_Id;
@end example


@strong{Add_New_Import_Declaration}: Create the import node to the list of the name visibility declarations,
without checking.

@example
@b{function }Add_New_Import_Declaration
     (Loc         : Locations.Location;
      Namespace   : Types.Node_Id;
      List_Items  : Types.List_Id;
      Is_Private  : Boolean := False)
     @b{return }Types.Node_Id;
@end example


@strong{Add_New_Alias_Declaration}: Create the alias node to the list of the name visibility declarations,
without checking.

@example
@b{function }Add_New_Alias_Declaration
     (Loc            : Locations.Location;
      Namespace      : Types.Node_Id;
      Identifier     : Types.Node_Id;
      Package_Name   : Types.Node_Id;
      Classifier_Ref : Types.Node_Id;
      Entity_Cat     : Ocarina.ME_AADL.Entity_Category;
      Component_Cat  : Ocarina.ME_AADL.Component_Category;
      Is_All         : Boolean := False;
      Is_Private     : Boolean := False)
     @b{return }Types.Node_Id;
@end example


