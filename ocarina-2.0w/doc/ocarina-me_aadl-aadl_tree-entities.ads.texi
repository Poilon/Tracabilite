@subsubsection Ocarina.ME_AADL.AADL_Tree.Entities 


This package defines the following subprograms:

@strong{Get_Entity_Category}: Return the entity referenced by an entity reference, or No_Node
if nothing is pointed

@example
@b{function }Get_Entity_Category (Node : Types.Node_Id) @b{return }Entity_Category;
@end example


@strong{Get_Name_Of_Entity}: Return the entity referenced by an entity reference, or No_Node
if nothing is pointed

@example
@b{function }Get_Name_Of_Entity
     (Entity : Types.Node_Id;
      Get_Display_Name : Boolean := True)
     @b{return }Types.Name_Id;
@end example


@strong{Get_Name_Of_Entity}: Return the entity referenced by an entity reference, or No_Node
if nothing is pointed

@example
@b{function }Get_Name_Of_Entity
     (Entity : Types.Node_Id;
      Get_Display_Name : Boolean := True)
     @b{return }String;
@end example


@strong{Get_Name_Of_Entity_Reference}: Return the entity referenced by an entity reference, or No_Node
if nothing is pointed

@example
@b{function }Get_Name_Of_Entity_Reference
     (Entity_Ref : Types.Node_Id;
      Get_Display_Name : Boolean := True)
     @b{return }Types.Name_Id;
@end example


@strong{Get_Name_Of_Entity_Reference}: Return the entity referenced by an entity reference, or No_Node
if nothing is pointed

@example
@b{function }Get_Name_Of_Entity_Reference
     (Entity_Ref : Types.Node_Id;
      Get_Display_Name : Boolean := True)
     @b{return }String;
@end example


@strong{Get_Referenced_Entity}: Return the entity referenced by an entity reference, or No_Node
if nothing is pointed

@example
@b{function }Get_Referenced_Entity
     (Entity_Ref : Types.Node_Id)
     @b{return }Types.Node_Id;
@end example


@strong{Set_Referenced_Entity}: Set the entity that is to be referenced by the entity reference

@example
@b{procedure }Set_Referenced_Entity (Entity_Ref, Entity : Types.Node_Id);
@end example


@strong{Entity_Reference_Path_Has_Several_Elements}: return True if the path has more than one element.

@example
@b{function }Entity_Reference_Path_Has_Several_Elements
     (Entity_Ref : Types.Node_Id)
     @b{return }Boolean;
@end example


@strong{Duplicate_Identifier}: 

   --
This following section is relative to Entities Components
   --

@example
@b{function }Duplicate_Identifier
     (Identifier : Types.Node_Id)
     @b{return }Types.Node_Id;
@end example


@strong{Get_Category_Of_Component}: return the category of the component type, implementation or
instance.

   --
This following section is relative to Entities Components Connections
   --

@example
@b{function }Get_Category_Of_Component
     (Component : Types.Node_Id)
     @b{return }Component_Category;
@end example


@strong{Get_Category_Of_Connection}: 

   --
This following section is relative to Entities Components Flows
   --

@example
@b{function }Get_Category_Of_Connection
     (Connection : Types.Node_Id)
     @b{return }Connection_Type;
@end example


@strong{Get_Category_Of_Flow}: 

   --
This following section is relative to Entities Components Subcomponents
   --

@example
@b{function }Get_Category_Of_Flow (Flow : Types.Node_Id) @b{return }Flow_Category;
@end example


@strong{Get_Category_Of_Subcomponent}: Return the category of the subcomponent or subcomponent
instance.

@example
@b{function }Get_Category_Of_Subcomponent
     (Subcomponent : Types.Node_Id)
     @b{return }Component_Category;
@end example


@strong{Get_Corresponding_Component}: return the corresponding component declaration, if there is
any, or No_Node.

   --
This following section is relative to Entities Components SubprogramCall
   --

@example
@b{function }Get_Corresponding_Component
     (Subcomponent : Types.Node_Id)
     @b{return }Types.Node_Id;
@end example


@strong{Get_Corresponding_Subprogram}: return the corresponding subprogram declaration, if there is
any, or No_Node.

   --
This following section is relative to Entities Namespaces (Packages...)
   --

@example
@b{function }Get_Corresponding_Subprogram
     (C@b{all }: Types.Node_Id)
     @b{return }Types.Node_Id;
@end example


@strong{Package_Has_Public_Declarations_Or_Properties}: Returns True if the package has public elements, else
False. Pack must reference a package specification.

@example
@b{function }Package_Has_Public_Declarations_Or_Properties
     (Pack : Types.Node_Id)
     @b{return }Boolean;
@end example


@strong{Package_Has_Private_Declarations_Or_Properties}: Returns True if the package has private elements, else
False. Pack must reference a package specification.

   --
This following section is relative to Entities Messages
   --

@example
@b{function }Package_Has_Private_Declarations_Or_Properties
     (Pack : Types.Node_Id)
     @b{return }Boolean;
@end example


@strong{Display_Node_Kind_Error}: Add Item to the end of the path that constitutes the reference
to the entity.

@example
@b{function }Display_Node_Kind_Err@b{or }     (Node : Types.Node_Id)
     @b{return }Boolean;
@end example


@strong{DNKE}: Add Item to the end of the path that constitutes the reference
to the entity.

@example
@b{function }DNKE (Node : Types.Node_Id) @b{return }Boolean
     @b{renames }Display_Node_Kind_Err@b{or }
@end example


@strong{Add_Path_Element_To_Entity_Reference}: Add Item to the end of the path that constitutes the reference
to the entity.

@example
@b{procedure }Add_Path_Element_To_Entity_Reference
     (Entity_Ref, Item : Types.Node_Id);
@end example


