@smallexample

------------------------------------------------------------------------------
-- @i{                                                                         --}
-- @i{                          OCARINA COMPONENTS                             --}
-- @i{                                                                         --}
-- @i{                P A R S E _ A N D _ P R I N T _ A A D L                  --}
-- @i{                                                                         --}
-- @i{                                B o d y                                  --}
-- @i{                                                                         --}
-- @i{              Copyright (C) 2007-2008, GET-Telecom Paris.                --}
-- @i{                                                                         --}
-- @i{Ocarina  is free software;  you  can  redistribute  it and/or  modify    --}
-- @i{it under terms of the GNU General Public License as published by the     --}
-- @i{Free Software Foundation; either version 2, or (at your option) any      --}
-- @i{later version. Ocarina is distributed  in  the  hope  that it will be    --}
-- @i{useful, but WITHOUT ANY WARRANTY;  without even the implied warranty of  --}
-- @i{MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General --}
-- @i{Public License for more details. You should have received  a copy of the --}
-- @i{GNU General Public License distributed with Ocarina; see file COPYING.   --}
-- @i{If not, write to the Free Software Foundation, 51 Franklin Street, Fifth --}
-- @i{Floor, Boston, MA 02111-1301, USA.                                       --}
-- @i{                                                                         --}
-- @i{As a special exception,  if other files  instantiate  generics from this --}
-- @i{unit, or you link  this unit with other files  to produce an executable, --}
-- @i{this  unit  does not  by itself cause  the resulting  executable to be   --}
-- @i{covered  by the  GNU  General  Public  License. This exception does not  --}
-- @i{however invalidate  any other reasons why the executable file might be   --}
-- @i{covered by the GNU Public License.                                       --}
-- @i{                                                                         --}
-- @i{                Ocarina is maintained by the Ocarina team                --}
-- @i{                      (ocarina-users@@@@listes.enst.fr)                     --}
-- @i{                                                                         --}
------------------------------------------------------------------------------

@b{with} Ada.Command_Line;
@b{with} GNAT.OS_Lib;

@b{with} Types;
@b{with} Namet;

@b{with} Ocarina.Configuration;
@b{with} Ocarina.Parser;
@b{with} Ocarina.Printers;
@b{with} Ocarina.Analyzer;

@b{procedure} Parse_And_Print_AADL @b{is}

   @b{use} Types;
   @b{use} Namet;

   Root              : Node_Id;
   Printer_Options   : Ocarina.Printers.Output_Options :=
     Ocarina.Printers.Default_Output_Options;
   Analysis_Options  : @b{constant} Ocarina.Analyzer.Analyzer_Options :=
     Ocarina.Analyzer.Default_Analyzer_Options;
   Success           : Boolean;

@b{begin}
   @b{loop}
      -- @i{ Initialization step}

      Ocarina.Initialize;
      Ocarina.Configuration.Init_Modules;

      -- @i{ Parse the aadl source file, the right parser is selected}
      -- @i{ automatically depending on the file suffix. It is important}
      -- @i{ that the root node is set to No_Node at the very beginning}
      -- @i{ or parsing.}

      Root := No_Node;

      @b{for} J @b{in} 1 .. Ada.Command_Line.Argument_Count @b{loop}
         -- @i{ Parse the file corresponding to the Jth argument opf the}
         -- @i{ commant line and enrich the global AADL tree.}

         Root := Ocarina.Parser.Parse (Ada.Command_Line.Argument (J), Root);
      @b{end} @b{loop};

      -- @i{ If something went wrong, Root = No_Node}

      @b{if} Root /= No_Node @b{then}
         -- @i{ Analyze the tree}

         Success := Ocarina.Analyzer.Analyze_Model (Root, Analysis_Options);

         @b{if} Success @b{then}
            -- @i{ Select the printer}

            Set_Str_To_Name_Buffer ("@i{aadl}");
            Printer_Options.Printer_Name := Name_Find;

            -- @i{ Print to an AADL File}

            Success := Ocarina.Printers.Print
              (Root    => Root,
               Options => Printer_Options);
         @b{else}
            GNAT.OS_Lib.OS_Exit (1);
         @b{end} @b{if};
      @b{else}
         GNAT.OS_Lib.OS_Exit (1);
      @b{end} @b{if};

      -- @i{ Pause for 1 second}

      @b{delay} 1.0;

      -- @i{ Reset step}

      Ocarina.Configuration.Reset_Modules;
      Ocarina.Reset;
   @b{end} @b{loop};

@b{end} Parse_And_Print_AADL;

@end smallexample
