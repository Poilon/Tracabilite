@subsubsection Ocarina.Builder.AADL.Components.Subprogram_Calls 


This package defines the following subprograms:

@strong{Add_Property_Association}: Add a property association to the subprogram
call. Subprogram_Call must reference a subprogram call (not a
call sequence). Property_Association references the property
association. Return True if everything went right, else False.

@example
@b{function }Add_Property_Association
     (Subprogram_C@b{all }     : Node_Id;
      Property_Association : Node_Id)
     @b{return }Boolean;
@end example


@strong{Add_Subprogram_Call}: Add a subprogram call to the subprogram call
sequence. Subprogram_Call must reference a subprogram call (not
a call sequence). Call_Sequence references the subprogram call
sequence. Return True if everything went right, else False.

@example
@b{function }Add_Subprogram_C@b{all }     (Call_Sequence   : Node_Id;
      Subprogram_C@b{all }: Node_Id)
     @b{return }Boolean;
@end example


@strong{Add_New_Subprogram_Call}: Create and add a new subprogram call into a subprogram call
sequence. Loc is the location of the call sequence in the
parsed text. Name references an identifier which contains the
name of the subprogram call. Call_Sequence references the
subprogram call sequence that contains the subprogram call.
The function return the Node_Id of the newly created subprogram
call if everything went right, else No_Node.

@example
@b{function }Add_New_Subprogram_C@b{all }     (Loc           : Location;
      Name          : Node_Id;
      Call_Sequence : Node_Id)
     @b{return }Node_Id;
@end example


@strong{Add_New_Subprogram_Call_Sequence}: Create and add a new subprogram call sequence into a component
implementation. Loc is the location of the call sequence in the
parsed text. Name references an identifier which contains the
name of the call sequence, if any. Comp_Impl references the
component implementation.  In_Modes contains the list of the
modes associated to the connection. Name can be No_Node, if the
sequence is not nammed. Subprogram calls Return the Node_Id of
the newly created call sequence if everything went right, else
No_Node.

@example
@b{function }Add_New_Subprogram_Call_Sequence
     (Loc       : Location;
      Name      : Node_Id;
      Comp_Impl : Node_Id;
      In_Modes  : Node_Id := No_Node)
     @b{return }Node_Id;
@end example


