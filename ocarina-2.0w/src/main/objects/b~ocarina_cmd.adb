pragma Ada_95;
pragma Source_File_Name (ada_main, Spec_File_Name => "b~ocarina_cmd.ads");
pragma Source_File_Name (ada_main, Body_File_Name => "b~ocarina_cmd.adb");

with System.Restrictions;

package body ada_main is
   pragma Warnings (Off);

   procedure Do_Finalize;
   pragma Import (C, Do_Finalize, "system__standard_library__adafinal");

   Local_Priority_Specific_Dispatching : constant String := "";
   Local_Interrupt_States : constant String := "";

   procedure adainit is
      E009 : Boolean; pragma Import (Ada, E009, "system__secondary_stack_E");
      E013 : Boolean; pragma Import (Ada, E013, "system__soft_links_E");
      E019 : Boolean; pragma Import (Ada, E019, "system__exception_table_E");
      E390 : Boolean; pragma Import (Ada, E390, "ada__calendar_E");
      E396 : Boolean; pragma Import (Ada, E396, "ada__calendar__time_zones_E");
      E046 : Boolean; pragma Import (Ada, E046, "ada__io_exceptions_E");
      E293 : Boolean; pragma Import (Ada, E293, "ada__numerics_E");
      E091 : Boolean; pragma Import (Ada, E091, "ada__strings_E");
      E048 : Boolean; pragma Import (Ada, E048, "ada__tags_E");
      E057 : Boolean; pragma Import (Ada, E057, "ada__streams_E");
      E074 : Boolean; pragma Import (Ada, E074, "interfaces__c_E");
      E115 : Boolean; pragma Import (Ada, E115, "system__assertions_E");
      E066 : Boolean; pragma Import (Ada, E066, "system__finalization_root_E");
      E076 : Boolean; pragma Import (Ada, E076, "system__os_lib_E");
      E451 : Boolean; pragma Import (Ada, E451, "system__regpat_E");
      E093 : Boolean; pragma Import (Ada, E093, "ada__strings__maps_E");
      E096 : Boolean; pragma Import (Ada, E096, "ada__strings__maps__constants_E");
      E086 : Boolean; pragma Import (Ada, E086, "gnat__directory_operations_E");
      E434 : Boolean; pragma Import (Ada, E434, "gnat__directory_operations__iteration_E");
      E068 : Boolean; pragma Import (Ada, E068, "system__finalization_implementation_E");
      E064 : Boolean; pragma Import (Ada, E064, "ada__finalization_E");
      E081 : Boolean; pragma Import (Ada, E081, "ada__finalization__list_controller_E");
      E123 : Boolean; pragma Import (Ada, E123, "ada__strings__unbounded_E");
      E388 : Boolean; pragma Import (Ada, E388, "ada__directories_E");
      E446 : Boolean; pragma Import (Ada, E446, "gnat__expect_E");
      E079 : Boolean; pragma Import (Ada, E079, "system__file_control_block_E");
      E457 : Boolean; pragma Import (Ada, E457, "ada__streams__stream_io_E");
      E062 : Boolean; pragma Import (Ada, E062, "system__file_io_E");
      E130 : Boolean; pragma Import (Ada, E130, "system__regexp_E");
      E121 : Boolean; pragma Import (Ada, E121, "gnat__command_line_E");
      E420 : Boolean; pragma Import (Ada, E420, "system__task_info_E");
      E408 : Boolean; pragma Import (Ada, E408, "ada__real_time_E");
      E430 : Boolean; pragma Import (Ada, E430, "ada__real_time__delays_E");
      E056 : Boolean; pragma Import (Ada, E056, "ada__text_io_E");
      E328 : Boolean; pragma Import (Ada, E328, "gnat__io_aux_E");
      E156 : Boolean; pragma Import (Ada, E156, "charset_E");
      E134 : Boolean; pragma Import (Ada, E134, "ocarina_E");
      E681 : Boolean; pragma Import (Ada, E681, "ocarina__be_real_E");
      E625 : Boolean; pragma Import (Ada, E625, "ocarina__configuration_E");
      E683 : Boolean; pragma Import (Ada, E683, "ocarina__fe_aadl_E");
      E727 : Boolean; pragma Import (Ada, E727, "ocarina__fe_aadl_ba_E");
      E754 : Boolean; pragma Import (Ada, E754, "ocarina__fe_real_E");
      E119 : Boolean; pragma Import (Ada, E119, "locations_E");
      E083 : Boolean; pragma Import (Ada, E083, "errors_E");
      E103 : Boolean; pragma Import (Ada, E103, "namet_E");
      E189 : Boolean; pragma Import (Ada, E189, "ocarina__analyzer_E");
      E191 : Boolean; pragma Import (Ada, E191, "ocarina__analyzer__aadl_E");
      E193 : Boolean; pragma Import (Ada, E193, "ocarina__analyzer__aadl__legality_rules_E");
      E199 : Boolean; pragma Import (Ada, E199, "ocarina__analyzer__aadl__links_E");
      E234 : Boolean; pragma Import (Ada, E234, "ocarina__analyzer__aadl__names_E");
      E203 : Boolean; pragma Import (Ada, E203, "ocarina__analyzer__aadl__naming_rules_E");
      E209 : Boolean; pragma Import (Ada, E209, "ocarina__analyzer__aadl__queries_E");
      E207 : Boolean; pragma Import (Ada, E207, "ocarina__analyzer__aadl__semantics_E");
      E240 : Boolean; pragma Import (Ada, E240, "ocarina__analyzer__real_E");
      E170 : Boolean; pragma Import (Ada, E170, "ocarina__annotations_E");
      E303 : Boolean; pragma Import (Ada, E303, "ocarina__backends_E");
      E520 : Boolean; pragma Import (Ada, E520, "ocarina__backends__ada_tree__generator_E");
      E522 : Boolean; pragma Import (Ada, E522, "ocarina__backends__ada_tree__generator__spark_E");
      E306 : Boolean; pragma Import (Ada, E306, "ocarina__backends__ada_tree__nodes_E");
      E310 : Boolean; pragma Import (Ada, E310, "ocarina__backends__ada_tree__nutils_E");
      E314 : Boolean; pragma Import (Ada, E314, "ocarina__backends__ada_values_E");
      E354 : Boolean; pragma Import (Ada, E354, "ocarina__backends__arinc653_conf_E");
      E356 : Boolean; pragma Import (Ada, E356, "ocarina__backends__arinc653_conf__connections_E");
      E372 : Boolean; pragma Import (Ada, E372, "ocarina__backends__arinc653_conf__memory_E");
      E374 : Boolean; pragma Import (Ada, E374, "ocarina__backends__arinc653_conf__module_hm_E");
      E376 : Boolean; pragma Import (Ada, E376, "ocarina__backends__arinc653_conf__partition_hm_E");
      E378 : Boolean; pragma Import (Ada, E378, "ocarina__backends__arinc653_conf__partitions_E");
      E380 : Boolean; pragma Import (Ada, E380, "ocarina__backends__arinc653_conf__scheduling_E");
      E382 : Boolean; pragma Import (Ada, E382, "ocarina__backends__arinc653_conf__system_hm_E");
      E326 : Boolean; pragma Import (Ada, E326, "ocarina__backends__boundt_E");
      E346 : Boolean; pragma Import (Ada, E346, "ocarina__backends__c_common__subprograms_E");
      E348 : Boolean; pragma Import (Ada, E348, "ocarina__backends__c_common__types_E");
      E402 : Boolean; pragma Import (Ada, E402, "ocarina__backends__c_tree__generator_E");
      E333 : Boolean; pragma Import (Ada, E333, "ocarina__backends__c_tree__nodes_E");
      E337 : Boolean; pragma Import (Ada, E337, "ocarina__backends__c_tree__nutils_E");
      E342 : Boolean; pragma Import (Ada, E342, "ocarina__backends__c_values_E");
      E485 : Boolean; pragma Import (Ada, E485, "ocarina__backends__carts_E");
      E487 : Boolean; pragma Import (Ada, E487, "ocarina__backends__carts__main_E");
      E489 : Boolean; pragma Import (Ada, E489, "ocarina__backends__carts__mapping_E");
      E491 : Boolean; pragma Import (Ada, E491, "ocarina__backends__cheddar_E");
      E493 : Boolean; pragma Import (Ada, E493, "ocarina__backends__cheddar__main_E");
      E495 : Boolean; pragma Import (Ada, E495, "ocarina__backends__cheddar__mapping_E");
      E384 : Boolean; pragma Import (Ada, E384, "ocarina__backends__expander_E");
      E316 : Boolean; pragma Import (Ada, E316, "ocarina__backends__messages_E");
      E497 : Boolean; pragma Import (Ada, E497, "ocarina__backends__pn_E");
      E499 : Boolean; pragma Import (Ada, E499, "ocarina__backends__pn__components_E");
      E512 : Boolean; pragma Import (Ada, E512, "ocarina__backends__pn__format__cami_E");
      E514 : Boolean; pragma Import (Ada, E514, "ocarina__backends__pn__format__tina_E");
      E505 : Boolean; pragma Import (Ada, E505, "ocarina__backends__pn__iutils_E");
      E503 : Boolean; pragma Import (Ada, E503, "ocarina__backends__pn__nodes_E");
      E507 : Boolean; pragma Import (Ada, E507, "ocarina__backends__pn__nutils_E");
      E516 : Boolean; pragma Import (Ada, E516, "ocarina__backends__pn__printer_E");
      E509 : Boolean; pragma Import (Ada, E509, "ocarina__backends__pn__utils_E");
      E518 : Boolean; pragma Import (Ada, E518, "ocarina__backends__po_hi_ada_E");
      E524 : Boolean; pragma Import (Ada, E524, "ocarina__backends__po_hi_ada__activity_E");
      E530 : Boolean; pragma Import (Ada, E530, "ocarina__backends__po_hi_ada__deployment_E");
      E532 : Boolean; pragma Import (Ada, E532, "ocarina__backends__po_hi_ada__main_E");
      E534 : Boolean; pragma Import (Ada, E534, "ocarina__backends__po_hi_ada__marshallers_E");
      E536 : Boolean; pragma Import (Ada, E536, "ocarina__backends__po_hi_ada__naming_E");
      E528 : Boolean; pragma Import (Ada, E528, "ocarina__backends__po_hi_ada__runtime_E");
      E538 : Boolean; pragma Import (Ada, E538, "ocarina__backends__po_hi_ada__subprograms_E");
      E540 : Boolean; pragma Import (Ada, E540, "ocarina__backends__po_hi_ada__transport_E");
      E542 : Boolean; pragma Import (Ada, E542, "ocarina__backends__po_hi_ada__types_E");
      E344 : Boolean; pragma Import (Ada, E344, "ocarina__backends__po_hi_c_E");
      E473 : Boolean; pragma Import (Ada, E473, "ocarina__backends__po_hi_c__activity_E");
      E475 : Boolean; pragma Import (Ada, E475, "ocarina__backends__po_hi_c__deployment_E");
      E477 : Boolean; pragma Import (Ada, E477, "ocarina__backends__po_hi_c__main_E");
      E479 : Boolean; pragma Import (Ada, E479, "ocarina__backends__po_hi_c__marshallers_E");
      E481 : Boolean; pragma Import (Ada, E481, "ocarina__backends__po_hi_c__naming_E");
      E483 : Boolean; pragma Import (Ada, E483, "ocarina__backends__po_hi_c__request_E");
      E350 : Boolean; pragma Import (Ada, E350, "ocarina__backends__po_hi_c__runtime_E");
      E544 : Boolean; pragma Import (Ada, E544, "ocarina__backends__po_hi_rtsj_E");
      E546 : Boolean; pragma Import (Ada, E546, "ocarina__backends__po_hi_rtsj__activity_E");
      E561 : Boolean; pragma Import (Ada, E561, "ocarina__backends__po_hi_rtsj__deployment_E");
      E563 : Boolean; pragma Import (Ada, E563, "ocarina__backends__po_hi_rtsj__generated_types_E");
      E565 : Boolean; pragma Import (Ada, E565, "ocarina__backends__po_hi_rtsj__main_E");
      E567 : Boolean; pragma Import (Ada, E567, "ocarina__backends__po_hi_rtsj__naming_E");
      E550 : Boolean; pragma Import (Ada, E550, "ocarina__backends__po_hi_rtsj__runtime_E");
      E569 : Boolean; pragma Import (Ada, E569, "ocarina__backends__po_hi_rtsj__subprograms_E");
      E571 : Boolean; pragma Import (Ada, E571, "ocarina__backends__po_hi_rtsj__transport_high_level_E");
      E575 : Boolean; pragma Import (Ada, E575, "ocarina__backends__po_qos_ada_E");
      E577 : Boolean; pragma Import (Ada, E577, "ocarina__backends__po_qos_ada__helpers_E");
      E583 : Boolean; pragma Import (Ada, E583, "ocarina__backends__po_qos_ada__main_E");
      E585 : Boolean; pragma Import (Ada, E585, "ocarina__backends__po_qos_ada__namespaces_E");
      E587 : Boolean; pragma Import (Ada, E587, "ocarina__backends__po_qos_ada__obj_adapters_E");
      E589 : Boolean; pragma Import (Ada, E589, "ocarina__backends__po_qos_ada__parameters_E");
      E581 : Boolean; pragma Import (Ada, E581, "ocarina__backends__po_qos_ada__runtime_E");
      E591 : Boolean; pragma Import (Ada, E591, "ocarina__backends__po_qos_ada__servants_E");
      E593 : Boolean; pragma Import (Ada, E593, "ocarina__backends__po_qos_ada__setup_E");
      E352 : Boolean; pragma Import (Ada, E352, "ocarina__backends__pok_c_E");
      E459 : Boolean; pragma Import (Ada, E459, "ocarina__backends__pok_c__activity_E");
      E463 : Boolean; pragma Import (Ada, E463, "ocarina__backends__pok_c__deployment_E");
      E465 : Boolean; pragma Import (Ada, E465, "ocarina__backends__pok_c__main_E");
      E467 : Boolean; pragma Import (Ada, E467, "ocarina__backends__pok_c__makefile_E");
      E469 : Boolean; pragma Import (Ada, E469, "ocarina__backends__pok_c__naming_E");
      E461 : Boolean; pragma Import (Ada, E461, "ocarina__backends__pok_c__runtime_E");
      E471 : Boolean; pragma Import (Ada, E471, "ocarina__backends__pok_cheddar_E");
      E320 : Boolean; pragma Import (Ada, E320, "ocarina__backends__properties_E");
      E358 : Boolean; pragma Import (Ada, E358, "ocarina__backends__arinc653_conf__mapping_E");
      E330 : Boolean; pragma Import (Ada, E330, "ocarina__backends__build_utils_E");
      E340 : Boolean; pragma Import (Ada, E340, "ocarina__backends__c_common__mapping_E");
      E406 : Boolean; pragma Import (Ada, E406, "ocarina__backends__execution_tests_E");
      E436 : Boolean; pragma Import (Ada, E436, "ocarina__backends__execution_utils_E");
      E526 : Boolean; pragma Import (Ada, E526, "ocarina__backends__po_hi_ada__mapping_E");
      E548 : Boolean; pragma Import (Ada, E548, "ocarina__backends__po_hi_rtsj__mapping_E");
      E579 : Boolean; pragma Import (Ada, E579, "ocarina__backends__po_qos_ada__mapping_E");
      E573 : Boolean; pragma Import (Ada, E573, "ocarina__backends__rtsj_tree__generator_E");
      E553 : Boolean; pragma Import (Ada, E553, "ocarina__backends__rtsj_tree__nodes_E");
      E557 : Boolean; pragma Import (Ada, E557, "ocarina__backends__rtsj_tree__nutils_E");
      E559 : Boolean; pragma Import (Ada, E559, "ocarina__backends__rtsj_values_E");
      E617 : Boolean; pragma Import (Ada, E617, "ocarina__backends__stats_E");
      E619 : Boolean; pragma Import (Ada, E619, "ocarina__backends__stats__main_E");
      E621 : Boolean; pragma Import (Ada, E621, "ocarina__backends__stats__mapping_E");
      E623 : Boolean; pragma Import (Ada, E623, "ocarina__backends__subprograms_E");
      E318 : Boolean; pragma Import (Ada, E318, "ocarina__backends__utils_E");
      E361 : Boolean; pragma Import (Ada, E361, "ocarina__backends__xml_common__mapping_E");
      E386 : Boolean; pragma Import (Ada, E386, "ocarina__backends__xml_tree__generator_E");
      E364 : Boolean; pragma Import (Ada, E364, "ocarina__backends__xml_tree__nodes_E");
      E370 : Boolean; pragma Import (Ada, E370, "ocarina__backends__xml_tree__nutils_E");
      E368 : Boolean; pragma Import (Ada, E368, "ocarina__backends__xml_values_E");
      E693 : Boolean; pragma Import (Ada, E693, "ocarina__builder__aadl__annexes_E");
      E218 : Boolean; pragma Import (Ada, E218, "ocarina__builder__aadl__components_E");
      E709 : Boolean; pragma Import (Ada, E709, "ocarina__builder__aadl__components__arrays_E");
      E222 : Boolean; pragma Import (Ada, E222, "ocarina__builder__aadl__components__connections_E");
      E224 : Boolean; pragma Import (Ada, E224, "ocarina__builder__aadl__components__features_E");
      E226 : Boolean; pragma Import (Ada, E226, "ocarina__builder__aadl__components__flows_E");
      E228 : Boolean; pragma Import (Ada, E228, "ocarina__builder__aadl__components__modes_E");
      E717 : Boolean; pragma Import (Ada, E717, "ocarina__builder__aadl__components__prototypes_E");
      E230 : Boolean; pragma Import (Ada, E230, "ocarina__builder__aadl__components__subcomponents_E");
      E232 : Boolean; pragma Import (Ada, E232, "ocarina__builder__aadl__components__subprogram_calls_E");
      E220 : Boolean; pragma Import (Ada, E220, "ocarina__builder__aadl__namespaces_E");
      E216 : Boolean; pragma Import (Ada, E216, "ocarina__builder__aadl__properties_E");
      E740 : Boolean; pragma Import (Ada, E740, "ocarina__builder__aadl_ba__actions_E");
      E744 : Boolean; pragma Import (Ada, E744, "ocarina__builder__aadl_ba__expressions_E");
      E736 : Boolean; pragma Import (Ada, E736, "ocarina__builder__aadl_ba__specifications_E");
      E750 : Boolean; pragma Import (Ada, E750, "ocarina__builder__aadl_ba__thread_dispatch_E");
      E244 : Boolean; pragma Import (Ada, E244, "ocarina__builder__real_E");
      E756 : Boolean; pragma Import (Ada, E756, "ocarina__fe_real__parser_E");
      E256 : Boolean; pragma Import (Ada, E256, "ocarina__files_E");
      E260 : Boolean; pragma Import (Ada, E260, "ocarina__instances_E");
      E262 : Boolean; pragma Import (Ada, E262, "ocarina__instances__components_E");
      E264 : Boolean; pragma Import (Ada, E264, "ocarina__instances__components__connections_E");
      E278 : Boolean; pragma Import (Ada, E278, "ocarina__instances__components__features_E");
      E268 : Boolean; pragma Import (Ada, E268, "ocarina__instances__components__modes_E");
      E280 : Boolean; pragma Import (Ada, E280, "ocarina__instances__components__subcomponents_E");
      E270 : Boolean; pragma Import (Ada, E270, "ocarina__instances__components__subprogram_calls_E");
      E272 : Boolean; pragma Import (Ada, E272, "ocarina__instances__messages_E");
      E274 : Boolean; pragma Import (Ada, E274, "ocarina__instances__namespaces_E");
      E283 : Boolean; pragma Import (Ada, E283, "ocarina__instances__processor__properties_E");
      E266 : Boolean; pragma Import (Ada, E266, "ocarina__instances__properties_E");
      E288 : Boolean; pragma Import (Ada, E288, "ocarina__instances__queries_E");
      E286 : Boolean; pragma Import (Ada, E286, "ocarina__instances__real_checker__queries_E");
      E595 : Boolean; pragma Import (Ada, E595, "ocarina__backends__real_E");
      E599 : Boolean; pragma Import (Ada, E599, "ocarina__instances__real_checker__queries__relational_predicates_E");
      E179 : Boolean; pragma Import (Ada, E179, "ocarina__me_aadl__aadl_instances__entities_E");
      E183 : Boolean; pragma Import (Ada, E183, "ocarina__me_aadl__aadl_instances__nodes_E");
      E276 : Boolean; pragma Import (Ada, E276, "ocarina__instances__finder_E");
      E177 : Boolean; pragma Import (Ada, E177, "ocarina__me_aadl__aadl_instances__nutils_E");
      E185 : Boolean; pragma Import (Ada, E185, "ocarina__me_aadl__aadl_tree__entities_E");
      E166 : Boolean; pragma Import (Ada, E166, "ocarina__me_aadl__aadl_tree__nodes_E");
      E136 : Boolean; pragma Import (Ada, E136, "ocarina__aadl_values_E");
      E201 : Boolean; pragma Import (Ada, E201, "ocarina__analyzer__aadl__finder_E");
      E195 : Boolean; pragma Import (Ada, E195, "ocarina__analyzer__messages_E");
      E290 : Boolean; pragma Import (Ada, E290, "ocarina__me_aadl__aadl_instances__entities__properties_E");
      E197 : Boolean; pragma Import (Ada, E197, "ocarina__me_aadl__aadl_tree__entities__properties_E");
      E187 : Boolean; pragma Import (Ada, E187, "ocarina__me_aadl__aadl_tree__nutils_E");
      E236 : Boolean; pragma Import (Ada, E236, "ocarina__me_aadl__printers_E");
      E657 : Boolean; pragma Import (Ada, E657, "ocarina__me_aadl__tokens_E");
      E627 : Boolean; pragma Import (Ada, E627, "ocarina__be_aadl_E");
      E631 : Boolean; pragma Import (Ada, E631, "ocarina__be_aadl__annexes_E");
      E629 : Boolean; pragma Import (Ada, E629, "ocarina__be_aadl__components_E");
      E641 : Boolean; pragma Import (Ada, E641, "ocarina__be_aadl__components__arrays_E");
      E643 : Boolean; pragma Import (Ada, E643, "ocarina__be_aadl__components__connections_E");
      E645 : Boolean; pragma Import (Ada, E645, "ocarina__be_aadl__components__features_E");
      E647 : Boolean; pragma Import (Ada, E647, "ocarina__be_aadl__components__flows_E");
      E633 : Boolean; pragma Import (Ada, E633, "ocarina__be_aadl__components__modes_E");
      E649 : Boolean; pragma Import (Ada, E649, "ocarina__be_aadl__components__prototypes_E");
      E651 : Boolean; pragma Import (Ada, E651, "ocarina__be_aadl__components__subcomponents_E");
      E653 : Boolean; pragma Import (Ada, E653, "ocarina__be_aadl__components__subprogram_calls_E");
      E635 : Boolean; pragma Import (Ada, E635, "ocarina__be_aadl__identifiers_E");
      E655 : Boolean; pragma Import (Ada, E655, "ocarina__be_aadl__namespaces_E");
      E637 : Boolean; pragma Import (Ada, E637, "ocarina__be_aadl__properties_E");
      E639 : Boolean; pragma Import (Ada, E639, "ocarina__be_aadl__properties__values_E");
      E687 : Boolean; pragma Import (Ada, E687, "ocarina__fe_aadl__lexer_E");
      E725 : Boolean; pragma Import (Ada, E725, "ocarina__fe_aadl__parser_errors_E");
      E685 : Boolean; pragma Import (Ada, E685, "ocarina__fe_aadl__parser_E");
      E691 : Boolean; pragma Import (Ada, E691, "ocarina__fe_aadl__parser__annexes_E");
      E695 : Boolean; pragma Import (Ada, E695, "ocarina__fe_aadl__parser__components_E");
      E707 : Boolean; pragma Import (Ada, E707, "ocarina__fe_aadl__parser__components__arrays_E");
      E697 : Boolean; pragma Import (Ada, E697, "ocarina__fe_aadl__parser__components__connections_E");
      E711 : Boolean; pragma Import (Ada, E711, "ocarina__fe_aadl__parser__components__features_E");
      E713 : Boolean; pragma Import (Ada, E713, "ocarina__fe_aadl__parser__components__flows_E");
      E699 : Boolean; pragma Import (Ada, E699, "ocarina__fe_aadl__parser__components__modes_E");
      E715 : Boolean; pragma Import (Ada, E715, "ocarina__fe_aadl__parser__components__prototypes_E");
      E719 : Boolean; pragma Import (Ada, E719, "ocarina__fe_aadl__parser__components__subcomponents_E");
      E721 : Boolean; pragma Import (Ada, E721, "ocarina__fe_aadl__parser__components__subprogram_calls_E");
      E701 : Boolean; pragma Import (Ada, E701, "ocarina__fe_aadl__parser__identifiers_E");
      E689 : Boolean; pragma Import (Ada, E689, "ocarina__fe_aadl__parser__namespaces_E");
      E703 : Boolean; pragma Import (Ada, E703, "ocarina__fe_aadl__parser__properties_E");
      E705 : Boolean; pragma Import (Ada, E705, "ocarina__fe_aadl__parser__properties__values_E");
      E671 : Boolean; pragma Import (Ada, E671, "ocarina__me_aadl_ba__ba_tree__nodes_E");
      E675 : Boolean; pragma Import (Ada, E675, "ocarina__me_aadl_ba__ba_tree__nutils_E");
      E679 : Boolean; pragma Import (Ada, E679, "ocarina__me_aadl_ba__tokens_E");
      E659 : Boolean; pragma Import (Ada, E659, "ocarina__be_aadl_ba_E");
      E663 : Boolean; pragma Import (Ada, E663, "ocarina__be_aadl_ba__actions_E");
      E665 : Boolean; pragma Import (Ada, E665, "ocarina__be_aadl_ba__expressions_E");
      E667 : Boolean; pragma Import (Ada, E667, "ocarina__be_aadl_ba__identifiers_E");
      E661 : Boolean; pragma Import (Ada, E661, "ocarina__be_aadl_ba__specifications_E");
      E677 : Boolean; pragma Import (Ada, E677, "ocarina__be_aadl_ba__thread_dispatch_E");
      E731 : Boolean; pragma Import (Ada, E731, "ocarina__fe_aadl_ba__lexer_E");
      E752 : Boolean; pragma Import (Ada, E752, "ocarina__fe_aadl_ba__parser_errors_E");
      E729 : Boolean; pragma Import (Ada, E729, "ocarina__fe_aadl_ba__parser_E");
      E738 : Boolean; pragma Import (Ada, E738, "ocarina__fe_aadl_ba__parser__actions_E");
      E742 : Boolean; pragma Import (Ada, E742, "ocarina__fe_aadl_ba__parser__expressions_E");
      E746 : Boolean; pragma Import (Ada, E746, "ocarina__fe_aadl_ba__parser__identifiers_E");
      E733 : Boolean; pragma Import (Ada, E733, "ocarina__fe_aadl_ba__parser__specifications_E");
      E748 : Boolean; pragma Import (Ada, E748, "ocarina__fe_aadl_ba__parser__thread_dispatch_E");
      E248 : Boolean; pragma Import (Ada, E248, "ocarina__me_real__real_tree__nodes_E");
      E258 : Boolean; pragma Import (Ada, E258, "ocarina__me_real__real_tree__nutils_E");
      E242 : Boolean; pragma Import (Ada, E242, "ocarina__analyzer__real__finder_E");
      E254 : Boolean; pragma Import (Ada, E254, "ocarina__me_real__tokens_E");
      E758 : Boolean; pragma Import (Ada, E758, "ocarina__fe_real__lexer_E");
      E760 : Boolean; pragma Import (Ada, E760, "ocarina__fe_real__parser_errors_E");
      E238 : Boolean; pragma Import (Ada, E238, "ocarina__options_E");
      E723 : Boolean; pragma Import (Ada, E723, "ocarina__parser_E");
      E212 : Boolean; pragma Import (Ada, E212, "ocarina__processor__properties_E");
      E205 : Boolean; pragma Import (Ada, E205, "ocarina__property_sets_E");
      E299 : Boolean; pragma Import (Ada, E299, "ocarina__real_expander_E");
      E301 : Boolean; pragma Import (Ada, E301, "ocarina__real_expander__flow_analysis_E");
      E292 : Boolean; pragma Import (Ada, E292, "ocarina__real_values_E");
      E762 : Boolean; pragma Import (Ada, E762, "ocarina__transfo_E");
      E764 : Boolean; pragma Import (Ada, E764, "ocarina__transfo__fusions_E");
      E766 : Boolean; pragma Import (Ada, E766, "ocarina__transfo__fusions__scheduler_E");
      E768 : Boolean; pragma Import (Ada, E768, "ocarina__transfo__move_E");
      E770 : Boolean; pragma Import (Ada, E770, "ocarina__transfo__optim_E");
      E772 : Boolean; pragma Import (Ada, E772, "ocarina__transfo__optim__eval_E");
      E404 : Boolean; pragma Import (Ada, E404, "outfiles_E");
      E109 : Boolean; pragma Import (Ada, E109, "output_E");
      E308 : Boolean; pragma Import (Ada, E308, "ocarina__backends__ada_tree__debug_E");
      E335 : Boolean; pragma Import (Ada, E335, "ocarina__backends__c_tree__debug_E");
      E501 : Boolean; pragma Import (Ada, E501, "ocarina__backends__pn__debug_E");
      E555 : Boolean; pragma Import (Ada, E555, "ocarina__backends__rtsj_tree__debug_E");
      E366 : Boolean; pragma Import (Ada, E366, "ocarina__backends__xml_tree__debug_E");
      E181 : Boolean; pragma Import (Ada, E181, "ocarina__me_aadl__aadl_instances__debug_E");
      E168 : Boolean; pragma Import (Ada, E168, "ocarina__me_aadl__aadl_tree__debug_E");
      E673 : Boolean; pragma Import (Ada, E673, "ocarina__me_aadl_ba__ba_tree__debug_E");
      E250 : Boolean; pragma Import (Ada, E250, "ocarina__me_real__real_tree__debug_E");
      E252 : Boolean; pragma Import (Ada, E252, "ocarina__me_real__real_tree__utils_E");
      E615 : Boolean; pragma Import (Ada, E615, "ocarina__instances__real_finder_E");
      E174 : Boolean; pragma Import (Ada, E174, "utils_E");
      E597 : Boolean; pragma Import (Ada, E597, "ocarina__instances__real_checker__queries__access_predicates_E");
      E601 : Boolean; pragma Import (Ada, E601, "ocarina__instances__real_checker__queries__bound_predicates_E");
      E603 : Boolean; pragma Import (Ada, E603, "ocarina__instances__real_checker__queries__call_predicates_E");
      E605 : Boolean; pragma Import (Ada, E605, "ocarina__instances__real_checker__queries__connected_predicates_E");
      E607 : Boolean; pragma Import (Ada, E607, "ocarina__instances__real_checker__queries__passing_predicates_E");
      E609 : Boolean; pragma Import (Ada, E609, "ocarina__instances__real_checker__queries__predecessor_predicates_E");
      E611 : Boolean; pragma Import (Ada, E611, "ocarina__instances__real_checker__queries__provided_class_predicates_E");
      E613 : Boolean; pragma Import (Ada, E613, "ocarina__instances__real_checker__queries__subcomponent_predicates_E");

      Main_Priority : Integer;
      pragma Import (C, Main_Priority, "__gl_main_priority");
      Time_Slice_Value : Integer;
      pragma Import (C, Time_Slice_Value, "__gl_time_slice_val");
      WC_Encoding : Character;
      pragma Import (C, WC_Encoding, "__gl_wc_encoding");
      Locking_Policy : Character;
      pragma Import (C, Locking_Policy, "__gl_locking_policy");
      Queuing_Policy : Character;
      pragma Import (C, Queuing_Policy, "__gl_queuing_policy");
      Task_Dispatching_Policy : Character;
      pragma Import (C, Task_Dispatching_Policy, "__gl_task_dispatching_policy");
      Priority_Specific_Dispatching : System.Address;
      pragma Import (C, Priority_Specific_Dispatching, "__gl_priority_specific_dispatching");
      Num_Specific_Dispatching : Integer;
      pragma Import (C, Num_Specific_Dispatching, "__gl_num_specific_dispatching");
      Interrupt_States : System.Address;
      pragma Import (C, Interrupt_States, "__gl_interrupt_states");
      Num_Interrupt_States : Integer;
      pragma Import (C, Num_Interrupt_States, "__gl_num_interrupt_states");
      Unreserve_All_Interrupts : Integer;
      pragma Import (C, Unreserve_All_Interrupts, "__gl_unreserve_all_interrupts");
      Exception_Tracebacks : Integer;
      pragma Import (C, Exception_Tracebacks, "__gl_exception_tracebacks");
      Zero_Cost_Exceptions : Integer;
      pragma Import (C, Zero_Cost_Exceptions, "__gl_zero_cost_exceptions");
      Detect_Blocking : Integer;
      pragma Import (C, Detect_Blocking, "__gl_detect_blocking");
      Default_Stack_Size : Integer;
      pragma Import (C, Default_Stack_Size, "__gl_default_stack_size");
      Leap_Seconds_Support : Integer;
      pragma Import (C, Leap_Seconds_Support, "__gl_leap_seconds_support");

      procedure Install_Handler;
      pragma Import (C, Install_Handler, "__gnat_install_handler");

      Handler_Installed : Integer;
      pragma Import (C, Handler_Installed, "__gnat_handler_installed");
   begin
      Main_Priority := -1;
      Time_Slice_Value := -1;
      WC_Encoding := 'b';
      Locking_Policy := ' ';
      Queuing_Policy := ' ';
      Task_Dispatching_Policy := ' ';
      System.Restrictions.Run_Time_Restrictions :=
        (Set =>
          (False, False, False, False, False, False, False, False, 
           False, False, False, False, False, False, False, False, 
           False, False, False, False, True, False, False, False, 
           False, True, False, False, False, False, False, False, 
           False, True, False, False, False, False, False, False, 
           False, False, False, False, True, False, False, False, 
           False, False, False, False, False, False, False, False, 
           False, False, False, False, True, False, False, False, 
           False, False, False, False, False, False),
         Value => (0, 0, 0, 0, 0, 0, 0),
         Violated =>
          (False, False, True, True, False, True, True, True, 
           True, True, False, False, True, False, False, True, 
           True, False, True, True, True, True, True, True, 
           False, True, True, True, True, False, False, True, 
           False, False, True, False, False, False, True, False, 
           False, True, False, False, False, False, False, False, 
           False, False, True, True, True, False, False, True, 
           False, True, True, True, True, True, True, False, 
           False, False, False, False, False, False),
         Count => (0, 0, 0, 0, 0, 0, 0),
         Unknown => (False, False, False, False, False, False, False));
      Priority_Specific_Dispatching :=
        Local_Priority_Specific_Dispatching'Address;
      Num_Specific_Dispatching := 0;
      Interrupt_States := Local_Interrupt_States'Address;
      Num_Interrupt_States := 0;
      Unreserve_All_Interrupts := 0;
      Exception_Tracebacks := 1;
      Zero_Cost_Exceptions := 1;
      Detect_Blocking := 0;
      Default_Stack_Size := -1;
      Leap_Seconds_Support := 0;

      if Handler_Installed = 0 then
         Install_Handler;
      end if;

      System.Scalar_Values.Initialize ('I', 'N');

      System.Soft_Links'Elab_Body;
      E013 := True;
      System.Secondary_Stack'Elab_Body;
      E009 := True;
      System.Exception_Table'Elab_Body;
      E019 := True;
      Ada.Calendar'Elab_Spec;
      Ada.Calendar'Elab_Body;
      E390 := True;
      Ada.Calendar.Time_Zones'Elab_Spec;
      E396 := True;
      Ada.Io_Exceptions'Elab_Spec;
      E046 := True;
      Ada.Numerics'Elab_Spec;
      E293 := True;
      Ada.Strings'Elab_Spec;
      E091 := True;
      Ada.Tags'Elab_Spec;
      Ada.Streams'Elab_Spec;
      E057 := True;
      Interfaces.C'Elab_Spec;
      E074 := True;
      System.Assertions'Elab_Spec;
      E115 := True;
      System.Finalization_Root'Elab_Spec;
      E066 := True;
      System.Os_Lib'Elab_Body;
      E076 := True;
      System.Regpat'Elab_Spec;
      Ada.Strings.Maps'Elab_Spec;
      E093 := True;
      Ada.Strings.Maps.Constants'Elab_Spec;
      E096 := True;
      Gnat.Directory_Operations'Elab_Spec;
      Gnat.Directory_Operations'Elab_Body;
      E086 := True;
      System.Finalization_Implementation'Elab_Spec;
      System.Finalization_Implementation'Elab_Body;
      E068 := True;
      Ada.Finalization'Elab_Spec;
      E064 := True;
      Ada.Finalization.List_Controller'Elab_Spec;
      E081 := True;
      Ada.Strings.Unbounded'Elab_Spec;
      E123 := True;
      Ada.Directories'Elab_Spec;
      Gnat.Expect'Elab_Spec;
      E446 := True;
      System.File_Control_Block'Elab_Spec;
      E079 := True;
      Ada.Streams.Stream_Io'Elab_Spec;
      System.File_Io'Elab_Body;
      E062 := True;
      E457 := True;
      System.Regexp'Elab_Spec;
      E130 := True;
      Ada.Directories'Elab_Body;
      E388 := True;
      E434 := True;
      Gnat.Command_Line'Elab_Spec;
      Gnat.Command_Line'Elab_Body;
      E121 := True;
      System.Task_Info'Elab_Spec;
      E420 := True;
      System.Regpat'Elab_Body;
      E451 := True;
      Ada.Tags'Elab_Body;
      E048 := True;
      Ada.Real_Time'Elab_Spec;
      E408 := True;
      Ada.Real_Time.Delays'Elab_Body;
      E430 := True;
      Ada.Text_Io'Elab_Spec;
      Ada.Text_Io'Elab_Body;
      E056 := True;
      E328 := True;
      Charset'Elab_Body;
      E156 := True;
      Ocarina'Elab_Spec;
      Errors'Elab_Spec;
      Namet'Elab_Spec;
      E119 := True;
      Ocarina.Analyzer.Aadl.Naming_Rules'Elab_Spec;
      Ocarina.Annotations'Elab_Body;
      E170 := True;
      Ocarina.Backends.Ada_Tree.Nodes'Elab_Spec;
      Ocarina.Backends.Ada_Tree.Nutils'Elab_Spec;
      Ocarina.Backends.Ada_Values'Elab_Spec;
      Ocarina.Backends.Arinc653_Conf'Elab_Spec;
      Ocarina.Backends.C_Tree.Nodes'Elab_Spec;
      Ocarina.Backends.C_Tree.Nutils'Elab_Spec;
      Ocarina.Backends.C_Values'Elab_Spec;
      Ocarina.Backends.Carts'Elab_Spec;
      Ocarina.Backends.Cheddar'Elab_Spec;
      Ocarina.Backends.Pn'Elab_Spec;
      Ocarina.Backends.Pn.Nodes'Elab_Spec;
      E507 := True;
      E516 := True;
      E509 := True;
      Ocarina.Backends.Po_Hi_Ada'Elab_Spec;
      Ocarina.Backends.Po_Hi_Ada.Runtime'Elab_Body;
      E528 := True;
      Ocarina.Backends.Po_Hi_C'Elab_Spec;
      Ocarina.Backends.Po_Hi_Rtsj'Elab_Spec;
      Ocarina.Backends.Po_Qos_Ada'Elab_Spec;
      Ocarina.Backends.Pok_C'Elab_Spec;
      Ocarina.Backends.Pok_Cheddar'Elab_Spec;
      Ocarina.Backends.Execution_Tests'Elab_Spec;
      Ocarina.Backends.Execution_Utils'Elab_Spec;
      Ocarina.Backends.Rtsj_Tree.Nodes'Elab_Spec;
      Ocarina.Backends.Rtsj_Tree.Nutils'Elab_Spec;
      Ocarina.Backends.Rtsj_Values'Elab_Spec;
      Ocarina.Backends.Stats'Elab_Spec;
      Ocarina.Backends.Stats.Main'Elab_Spec;
      Ocarina.Backends.Subprograms'Elab_Spec;
      Ocarina.Backends.Xml_Tree.Nodes'Elab_Spec;
      Ocarina.Backends.Xml_Tree.Nutils'Elab_Spec;
      Ocarina.Backends.Xml_Values'Elab_Spec;
      Ocarina.Files'Elab_Spec;
      E617 := True;
      E544 := True;
      E491 := True;
      E485 := True;
      E354 := True;
      Ocarina.Instances.Real_Checker.Queries'Elab_Spec;
      Ocarina.Me_Aadl.Aadl_Instances.Nodes'Elab_Spec;
      E361 := True;
      Ocarina.Backends.Subprograms'Elab_Body;
      E623 := True;
      Ocarina.Backends.Stats.Main'Elab_Body;
      E619 := True;
      E579 := True;
      E436 := True;
      Ocarina.Backends.Pok_Cheddar'Elab_Body;
      E471 := True;
      E469 := True;
      Ocarina.Backends.Pok_C.Main'Elab_Body;
      E465 := True;
      E459 := True;
      Ocarina.Backends.Po_Qos_Ada.Setup'Elab_Body;
      E593 := True;
      Ocarina.Backends.Po_Qos_Ada.Servants'Elab_Body;
      E591 := True;
      Ocarina.Backends.Po_Qos_Ada.Parameters'Elab_Body;
      E589 := True;
      E587 := True;
      Ocarina.Backends.Po_Qos_Ada.Main'Elab_Body;
      E583 := True;
      Ocarina.Backends.Po_Hi_Rtsj.Transport_High_Level'Elab_Body;
      E571 := True;
      Ocarina.Backends.Po_Hi_Rtsj.Subprograms'Elab_Body;
      E569 := True;
      Ocarina.Backends.Po_Hi_Rtsj.Naming'Elab_Body;
      E567 := True;
      Ocarina.Backends.Po_Hi_Rtsj.Main'Elab_Body;
      E565 := True;
      Ocarina.Backends.Po_Hi_Rtsj.Generated_Types'Elab_Body;
      E563 := True;
      Ocarina.Backends.Po_Hi_Rtsj.Deployment'Elab_Body;
      E561 := True;
      Ocarina.Backends.Po_Hi_Rtsj.Activity'Elab_Body;
      E546 := True;
      Ocarina.Backends.Po_Hi_C.Request'Elab_Body;
      E483 := True;
      Ocarina.Backends.Po_Hi_C.Naming'Elab_Body;
      E481 := True;
      Ocarina.Backends.Po_Hi_C.Marshallers'Elab_Body;
      E479 := True;
      Ocarina.Backends.Po_Hi_C.Main'Elab_Body;
      E477 := True;
      Ocarina.Backends.Po_Hi_C.Deployment'Elab_Body;
      E475 := True;
      Ocarina.Backends.Po_Hi_C.Activity'Elab_Body;
      E473 := True;
      E540 := True;
      E538 := True;
      E536 := True;
      E534 := True;
      E532 := True;
      Ocarina.Backends.Po_Hi_Ada.Deployment'Elab_Body;
      E530 := True;
      E493 := True;
      E489 := True;
      Ocarina.Backends.Carts.Main'Elab_Body;
      E487 := True;
      Ocarina.Backends.C_Common.Subprograms'Elab_Body;
      E346 := True;
      E382 := True;
      Ocarina.Backends.Arinc653_Conf.Scheduling'Elab_Body;
      E380 := True;
      Ocarina.Backends.Arinc653_Conf.Partitions'Elab_Body;
      E378 := True;
      E376 := True;
      E374 := True;
      E372 := True;
      E356 := True;
      Ocarina.Me_Aadl.Aadl_Tree.Nodes'Elab_Spec;
      E599 := True;
      E274 := True;
      E272 := True;
      E280 := True;
      E264 := True;
      E621 := True;
      E358 := True;
      E542 := True;
      Ocarina.Backends.Po_Hi_Ada.Activity'Elab_Body;
      E524 := True;
      Ocarina.Backends.C_Common.Types'Elab_Body;
      E348 := True;
      Ocarina.Aadl_Values'Elab_Spec;
      Ocarina.Aadl_Values'Elab_Body;
      E136 := True;
      Ocarina.Backends.Xml_Values'Elab_Body;
      E368 := True;
      Ocarina.Backends.Rtsj_Values'Elab_Body;
      E559 := True;
      Ocarina.Backends.C_Values'Elab_Body;
      E342 := True;
      Ocarina.Backends.Ada_Values'Elab_Body;
      E314 := True;
      E288 := True;
      E209 := True;
      E276 := True;
      E266 := True;
      E283 := True;
      E270 := True;
      E268 := True;
      E278 := True;
      E262 := True;
      E216 := True;
      E220 := True;
      E232 := True;
      E230 := True;
      E717 := True;
      E228 := True;
      E226 := True;
      E224 := True;
      E222 := True;
      E709 := True;
      E218 := True;
      E693 := True;
      Ocarina.Backends.Utils'Elab_Body;
      E318 := True;
      E203 := True;
      E234 := True;
      E193 := True;
      E134 := True;
      Ocarina.Me_Aadl.Tokens'Elab_Spec;
      E657 := True;
      E635 := True;
      Ocarina.Fe_Aadl.Lexer'Elab_Spec;
      E701 := True;
      E715 := True;
      E721 := True;
      E719 := True;
      E699 := True;
      E713 := True;
      E711 := True;
      E697 := True;
      E695 := True;
      E705 := True;
      E707 := True;
      Ocarina.Me_Aadl_Ba.Ba_Tree.Nodes'Elab_Spec;
      E675 := True;
      E750 := True;
      E736 := True;
      E744 := True;
      E740 := True;
      Ocarina.Me_Aadl_Ba.Tokens'Elab_Spec;
      E679 := True;
      Ocarina.Fe_Aadl_Ba.Lexer'Elab_Spec;
      Ocarina.Fe_Aadl_Ba.Lexer'Elab_Body;
      E731 := True;
      E746 := True;
      E742 := True;
      E738 := True;
      E748 := True;
      E733 := True;
      Ocarina.Me_Real.Real_Tree.Nodes'Elab_Spec;
      Ocarina.Me_Real.Real_Tree.Nutils'Elab_Spec;
      Ocarina.Analyzer.Real.Finder'Elab_Spec;
      Ocarina.Me_Real.Tokens'Elab_Spec;
      Ocarina.Fe_Real.Lexer'Elab_Spec;
      E758 := True;
      Ocarina.Options'Elab_Spec;
      E238 := True;
      E689 := True;
      E256 := True;
      E691 := True;
      E212 := True;
      E205 := True;
      E703 := True;
      E201 := True;
      Ocarina.Real_Expander.Flow_Analysis'Elab_Body;
      E301 := True;
      Ocarina.Real_Values'Elab_Spec;
      Ocarina.Real_Values'Elab_Body;
      E292 := True;
      Ocarina.Transfo'Elab_Spec;
      Ocarina.Transfo.Fusions'Elab_Spec;
      E625 := True;
      Ocarina.Transfo.Fusions.Scheduler'Elab_Spec;
      Ocarina.Transfo.Fusions.Scheduler'Elab_Body;
      E766 := True;
      Ocarina.Transfo.Optim.Eval'Elab_Spec;
      Output'Elab_Body;
      E109 := True;
      E404 := True;
      Ocarina.Transfo.Optim.Eval'Elab_Body;
      E772 := True;
      Ocarina.Parser'Elab_Body;
      E723 := True;
      E760 := True;
      E729 := True;
      E752 := True;
      E677 := True;
      E661 := True;
      E667 := True;
      E665 := True;
      E663 := True;
      E685 := True;
      E725 := True;
      Ocarina.Fe_Aadl.Lexer'Elab_Body;
      E687 := True;
      E639 := True;
      E637 := True;
      E655 := True;
      E653 := True;
      E651 := True;
      E649 := True;
      E633 := True;
      E647 := True;
      E645 := True;
      E643 := True;
      E641 := True;
      E629 := True;
      E631 := True;
      E236 := True;
      Ocarina.Backends.Execution_Tests'Elab_Body;
      E406 := True;
      Ocarina.Backends.Build_Utils'Elab_Body;
      E330 := True;
      Ocarina.Backends.Pok_C.Makefile'Elab_Body;
      E467 := True;
      E352 := True;
      E575 := True;
      E344 := True;
      E514 := True;
      E497 := True;
      E316 := True;
      E522 := True;
      Ocarina.Backends'Elab_Body;
      E303 := True;
      Ocarina.Analyzer'Elab_Body;
      E189 := True;
      Namet'Elab_Body;
      E103 := True;
      E083 := True;
      E754 := True;
      E727 := True;
      E683 := True;
      E306 := True;
      E333 := True;
      E503 := True;
      E505 := True;
      E512 := True;
      E499 := True;
      E553 := True;
      E364 := True;
      E183 := True;
      E179 := True;
      E260 := True;
      Ocarina.Transfo.Move'Elab_Body;
      E768 := True;
      E195 := True;
      E166 := True;
      E185 := True;
      E286 := True;
      E191 := True;
      E659 := True;
      E671 := True;
      E248 := True;
      E252 := True;
      E250 := True;
      E299 := True;
      Ocarina.Fe_Real.Parser'Elab_Body;
      E756 := True;
      E244 := True;
      Ocarina.Analyzer.Real'Elab_Body;
      E240 := True;
      E681 := True;
      E615 := True;
      Ocarina.Transfo.Optim'Elab_Body;
      E770 := True;
      E174 := True;
      E673 := True;
      E168 := True;
      E181 := True;
      E366 := True;
      E555 := True;
      E501 := True;
      E335 := True;
      E308 := True;
      Ocarina.Transfo.Fusions'Elab_Body;
      E764 := True;
      E762 := True;
      E254 := True;
      E242 := True;
      Ocarina.Me_Real.Real_Tree.Nutils'Elab_Body;
      E258 := True;
      E627 := True;
      E187 := True;
      E197 := True;
      E290 := True;
      E177 := True;
      Ocarina.Backends.Xml_Tree.Nutils'Elab_Body;
      E370 := True;
      E386 := True;
      Ocarina.Backends.Rtsj_Tree.Nutils'Elab_Body;
      E557 := True;
      E573 := True;
      E548 := True;
      E526 := True;
      E340 := True;
      Ocarina.Backends.Properties'Elab_Body;
      E320 := True;
      Ocarina.Backends.Pok_C.Runtime'Elab_Body;
      E461 := True;
      Ocarina.Backends.Pok_C.Deployment'Elab_Body;
      E463 := True;
      Ocarina.Backends.Po_Qos_Ada.Runtime'Elab_Body;
      E581 := True;
      Ocarina.Backends.Po_Qos_Ada.Namespaces'Elab_Body;
      E585 := True;
      Ocarina.Backends.Po_Qos_Ada.Helpers'Elab_Body;
      E577 := True;
      Ocarina.Backends.Po_Hi_Rtsj.Runtime'Elab_Body;
      E550 := True;
      Ocarina.Backends.Po_Hi_C.Runtime'Elab_Body;
      E350 := True;
      E518 := True;
      E384 := True;
      E495 := True;
      Ocarina.Backends.C_Tree.Nutils'Elab_Body;
      E337 := True;
      E402 := True;
      E326 := True;
      Ocarina.Backends.Ada_Tree.Nutils'Elab_Body;
      E310 := True;
      E520 := True;
      E207 := True;
      E199 := True;
      E597 := True;
      E601 := True;
      E603 := True;
      E605 := True;
      E607 := True;
      E609 := True;
      E611 := True;
      E613 := True;
      Ocarina.Backends.Real'Elab_Body;
      E595 := True;
   end adainit;

   procedure adafinal is
   begin
      Do_Finalize;
   end adafinal;

   function main
     (argc : Integer;
      argv : System.Address;
      envp : System.Address)
      return Integer
   is
      procedure initialize (Addr : System.Address);
      pragma Import (C, initialize, "__gnat_initialize");

      procedure finalize;
      pragma Import (C, finalize, "__gnat_finalize");

      procedure Ada_Main_Program;
      pragma Import (Ada, Ada_Main_Program, "_ada_ocarina_cmd");

      SEH : aliased array (1 .. 2) of Integer;

      Ensure_Reference : aliased System.Address := Ada_Main_Program_Name'Address;
      pragma Volatile (Ensure_Reference);

   begin
      gnat_argc := argc;
      gnat_argv := argv;
      gnat_envp := envp;

      Initialize (SEH'Address);
      adainit;
      Break_Start;
      Ada_Main_Program;
      Do_Finalize;
      Finalize;
      return (gnat_exit_status);
   end;

--  BEGIN Object file/option list
   --   /home/poilon/goinfre/mini-pfe/ocarina-2.0w/src/main/objects/ocarina-configuration.o
   --   /home/poilon/goinfre/mini-pfe/ocarina-2.0w/src/main/objects/ocarina_cmd.o
   --   -L/home/poilon/goinfre/mini-pfe/ocarina-2.0w/src/main/objects/
   --   -L/home/poilon/goinfre/mini-pfe/ocarina-2.0w/src/core/libs/
   --   -L/home/poilon/goinfre/mini-pfe/ocarina-2.0w/src/frontends/libs/
   --   -L/home/poilon/goinfre/mini-pfe/ocarina-2.0w/src/backends/libs/
   --   -L/home/poilon/goinfre/mini-pfe/ocarina-2.0w/src/transfo/libs/
   --   -L/usr/lib/i386-linux-gnu/gcc/i686-linux-gnu/4.4.5/adalib/
   --   -shared
   --   -lgnarl-4.4
   --   -lgnat-4.4
   --   -lpthread
--  END Object file/option list   

end ada_main;
