@smallexample

@b{with} PolyORB.Initialization;
@b{with} Sn_Servants;
@b{with} ARAO.Utils;
@b{with} ARAO.Periodic_Threads;
@b{with} ARAO.RT_Obj_Adapters;
@b{with} PolyORB.Setup;
@b{with} PolyORB.ORB;

-- @i{ Runtime configuration}
@b{with} ARAO.Setup.Application;
@b{pragma} Warnings (Off, ARAO.Setup.Application);
@b{pragma} Elaborate_All (ARAO.Setup.Application);

-- @i{ Full tasking mode}
@b{with} ARAO.Setup.Tasking.Full_Tasking;
@b{pragma} Warnings (Off, ARAO.Setup.Tasking.Full_Tasking);
@b{pragma} Elaborate_All (ARAO.Setup.Tasking.Full_Tasking);

@b{with} ARAO.Periodic_Threads;
@b{with} ARAO.RT_Obj_Adapters;

@b{procedure} proc @b{is}
   @b{use} proc_Servants;
@b{begin}
   PolyORB.Initialization.Initialize_World;

   -- @i{ Link local RT POA to current node, specifing priority}

   ARAO.RT_Obj_Adapters.Link_To_Obj_Adapter
     (new proc_Servants.th2_Object,
      Th2_Ref,
      1);

   -- @i{ Collecting the references of the processes to which it's}
   -- @i{ connected}

   ARAO.Utils.Get_GIOP_Ref (tr1_th1_Ref, "@i{127.0.0.1}", 4000, 1, "@i{th1}", "@i{iiop}", 1);

   -- @i{ Create a periodic thread}

   ARAO.Periodic_Threads.Create_Periodic_Thread
     (TP => proc_Servants.th1_Controller'Access);

   PolyORB.ORB.Run (PolyORB.Setup.The_ORB, May_Poll => True);
@b{end} proc;

@end smallexample
