@smallexample

------------------------------------------------------------------------------
-- @i{                                                                         --}
-- @i{                         PolyORB HI COMPONENTS                           --}
-- @i{                                                                         --}
-- @i{            P O L Y O R B _ H I . P E R I O D I C _ T A S K              --}
-- @i{                                                                         --}
-- @i{                                S p e c                                  --}
-- @i{                                                                         --}
-- @i{              Copyright (C) 2007-2011, GET-Telecom Paris.                --}
-- @i{                                                                         --}
-- @i{PolyORB HI is free software; you  can  redistribute  it and/or modify it --}
-- @i{under terms of the GNU General Public License as published by the Free   --}
-- @i{Software Foundation; either version 2, or (at your option) any later.    --}
-- @i{PolyORB HI is distributed  in the hope that it will be useful, but       --}
-- @i{WITHOUT ANY WARRANTY;  without even the implied warranty of              --}
-- @i{MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General --}
-- @i{Public License for more details. You should have received  a copy of the --}
-- @i{GNU General Public  License  distributed with PolyORB HI; see file       --}
-- @i{COPYING. If not, write  to the Free  Software Foundation, 51 Franklin    --}
-- @i{Street, Fifth Floor, Boston, MA 02111-1301, USA.                         --}
-- @i{                                                                         --}
-- @i{As a special exception,  if other files  instantiate  generics from this --}
-- @i{unit, or you link  this unit with other files  to produce an executable, --}
-- @i{this  unit  does not  by itself cause  the resulting  executable  to  be --}
-- @i{covered  by the  GNU  General  Public  License.  This exception does not --}
-- @i{however invalidate  any other reasons why  the executable file  might be --}
-- @i{covered by the  GNU Public License.                                      --}
-- @i{                                                                         --}
-- @i{               PolyORB HI is maintained by GET Telecom Paris             --}
-- @i{                                                                         --}
------------------------------------------------------------------------------

-- @i{ Define a periodic task that executes a Job}

@b{with} System;
@b{with} Ada.Real_Time;
@b{with} PolyORB_HI.Errors;
@b{with} PolyORB_HI_Generated.Deployment;

@b{generic}
   Entity          : @b{in} PolyORB_HI_Generated.Deployment.Entity_Type;
   -- @i{ So that the task know from which AADL entity it has been mapped}

   Dispatch_Offset     : @b{in} Ada.Real_Time.Time_Span
     := Ada.Real_Time.To_Time_Span (0.0);
   -- @i{ Dispatch offset}

   Task_Period     : @b{in} Ada.Real_Time.Time_Span;
   -- @i{ Task period}

   Task_Deadline   : @b{in} Ada.Real_Time.Time_Span;
   -- @i{ Task deadline}

   Task_Priority   : @b{in} System.Any_Priority;
   -- @i{ Task priority}

   Task_Stack_Size : @b{in} Natural;
   -- @i{ Task stack size}

   @b{with} @b{function} Job @b{return} PolyORB_HI.Errors.Error_Kind;
   -- @i{ Parameterless procedure executed by the periodic task}

   @b{with} @b{procedure} Activate_Entrypoint @b{is} @b{null};
   -- @i{ If given, the task runs Activate_Entrypoint after the global}
   -- @i{ initialization and before the task main loop.}

   @b{with} @b{procedure} Recover_Entrypoint @b{is} @b{null};
   -- @i{ If given, the task runs Recover_Entrypoint when an error is}
   -- @i{ detected.}

@b{package} PolyORB_HI.Periodic_Task @b{is}

   @b{task} The_Periodic_Task @b{is}
      @b{pragma} Priority (Task_Priority);
      @b{pragma} Storage_Size (Task_Stack_Size);
   @b{end} The_Periodic_Task;

   @b{function} Next_Deadline @b{return} Ada.Real_Time.Time;
   -- @i{ Return the value of the next deadline (in absolute time)}

@b{end} PolyORB_HI.Periodic_Task;

@end smallexample
